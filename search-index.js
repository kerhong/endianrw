var searchIndex = JSON.parse('{\
"endianrw":{"doc":"Library that allows to read and write primitive types from…","i":[[4,"BigEndian","endianrw","Big endian byte order",null,null],[4,"LittleEndian","","Little endian byte order",null,null],[6,"NetworkByteOrder","","Network byte order",null,null],[6,"NativeByteOrder","","",null,null],[8,"ByteTransform","","Tranform primitive types to and from buffer.",null,null],[16,"Buffer","","Describes large enough buffer to store T",0,null],[10,"from_bytes","","Read T from buffer",0,[[]]],[10,"to_bytes","","Convert T to buffer",0,[[]]],[10,"buffer","","Create large enough buffer to store T",0,[[]]],[8,"EndianReadExt","","Extension trait that allows to read endian specified…",null,null],[10,"read_as","","",1,[[],["result",6]]],[8,"EndianWriteExt","","Extension trait that allows to write endian specified…",null,null],[10,"write_as","","",2,[[],["result",6]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from_bytes","","",4,[[]]],[11,"to_bytes","","",4,[[]]],[11,"buffer","","",4,[[]]],[11,"from_bytes","","",4,[[]]],[11,"to_bytes","","",4,[[]]],[11,"buffer","","",4,[[]]],[11,"from_bytes","","",4,[[]]],[11,"to_bytes","","",4,[[]]],[11,"buffer","","",4,[[]]],[11,"from_bytes","","",4,[[]]],[11,"to_bytes","","",4,[[]]],[11,"buffer","","",4,[[]]],[11,"from_bytes","","",4,[[]]],[11,"to_bytes","","",4,[[]]],[11,"buffer","","",4,[[]]],[11,"from_bytes","","",4,[[]]],[11,"to_bytes","","",4,[[]]],[11,"buffer","","",4,[[]]],[11,"from_bytes","","",4,[[]]],[11,"to_bytes","","",4,[[]]],[11,"buffer","","",4,[[]]],[11,"from_bytes","","",4,[[]]],[11,"to_bytes","","",4,[[]]],[11,"buffer","","",4,[[]]],[11,"from_bytes","","",4,[[]]],[11,"to_bytes","","",4,[[]]],[11,"buffer","","",4,[[]]],[11,"from_bytes","","",4,[[]]],[11,"to_bytes","","",4,[[]]],[11,"buffer","","",4,[[]]],[11,"from_bytes","","",3,[[]]],[11,"to_bytes","","",3,[[]]],[11,"buffer","","",3,[[]]],[11,"from_bytes","","",3,[[]]],[11,"to_bytes","","",3,[[]]],[11,"buffer","","",3,[[]]],[11,"from_bytes","","",3,[[]]],[11,"to_bytes","","",3,[[]]],[11,"buffer","","",3,[[]]],[11,"from_bytes","","",3,[[]]],[11,"to_bytes","","",3,[[]]],[11,"buffer","","",3,[[]]],[11,"from_bytes","","",3,[[]]],[11,"to_bytes","","",3,[[]]],[11,"buffer","","",3,[[]]],[11,"from_bytes","","",3,[[]]],[11,"to_bytes","","",3,[[]]],[11,"buffer","","",3,[[]]],[11,"from_bytes","","",3,[[]]],[11,"to_bytes","","",3,[[]]],[11,"buffer","","",3,[[]]],[11,"from_bytes","","",3,[[]]],[11,"to_bytes","","",3,[[]]],[11,"buffer","","",3,[[]]],[11,"from_bytes","","",3,[[]]],[11,"to_bytes","","",3,[[]]],[11,"buffer","","",3,[[]]],[11,"from_bytes","","",3,[[]]],[11,"to_bytes","","",3,[[]]],[11,"buffer","","",3,[[]]]],"p":[[8,"ByteTransform"],[8,"EndianReadExt"],[8,"EndianWriteExt"],[4,"BigEndian"],[4,"LittleEndian"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);